{
  "name": "apiclient",
  "version": "0.2.5",
  "description": "request wrapper",
  "main": "apiclient.js",
  "scripts": {
    "test": "mocha -r jscoverage test/"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:septianw/node-apiclient.git"
  },
  "keywords": [
    "request",
    "api",
    "rest",
    "client"
  ],
  "author": {
    "name": "Septian Wibisono"
  },
  "license": "MIT",
  "dependencies": {
    "fs.extra": "^1.3.2",
    "merge": "^1.2.0",
    "mime": "^1.3.4",
    "request": "^2.69.0",
    "sprintf-js": "^1.0.3",
    "tmp": "0.0.28"
  },
  "devDependencies": {
    "jscoverage": "^0.6.0",
    "request-debug": "^0.2.0"
  },
  "readme": "# API client\n[![Build Status](https://travis-ci.org/septianw/node-apiclient.svg?branch=master)](https://travis-ci.org/septianw/node-apiclient)\n\n\nAPI client adalah request wrapper\n\nBasically, ApiClient is just a [request](https://www.npmjs.com/package/request) wrapper.\nIt wrap all request to more structured way. The way we separate remote endpoint\nspecification from coding overhead.\n\nBecause of apiclient is just wrapping [request](https://www.npmjs.com/package/request),\nany of [request options](https://www.npmjs.com/package/request#requestoptions-callback)\ncan be used here.\n\n## Usage\n\nTo access these URLs, we use apiclient this way :\n\nURLs:\n- GET https://remote.apihost.com:443/v1/api/user/1?apikey=asdf2345kjhnkj\n- POST https://remote.apihost.com:443/v1/api/user?apikey=asdf2345kjhnkj\n- PUT https://remote.apihost.com:443/v1/api/user/1?apikey=asdf2345kjhnkj\n- DELETE https://remote.apihost.com:443/v1/api/user/1?apikey=asdf2345kjhnkj\n\n```Javascript\nvar Apiclient = require('apiclient');\nvar seed = {\n  base: {\n    protocol: 'https',\n    hostname: 'remote.apihost.com',\n    port: 443,\n    pathname: 'v1/api'\n  },\n  path: {\n    GET: {\n      user: {\n        location: 'user/%(userid)d',\n        query: {\n          apikey: 'asdf2345kjhnkj'\n        }\n      }\n    },\n    POST: {\n      user: {\n        location: 'user',\n        query: {\n          apikey: 'asdf2345kjhnkj'\n        }\n      }\n    },\n    PUT: {\n      user: {\n        location: 'user/%(userid)d',\n        query: {\n          apikey: 'asdf2345kjhnkj'\n        }\n      }\n    },\n    DELETE: {\n      user: {\n        location: 'user/%(userid)d',\n        query: {\n          apikey: 'asdf2345kjhnkj'\n        }\n      }\n    }\n  }\n}\n\nvar Api = new Apiclient(seed);\n\nApi.get('user', {userid: 1}, {}, function (error, response, body) {\n  console.log(error, response, body);\n});\n\nApi.post('user', {}, {\n  body: {\n    username: 'John',\n    password: 'John123'\n  }\n}, function (error, response, body) {\n  console.log(error, response, body);\n});\n\nApi.put('user', {userid: 1}, {}, function (error, response, body) {\n  console.log(error, response, body);\n});\n\nApi.delete('user', {userid: 1}, {}, function (error, response, body) {\n  console.log(error, response, body);\n});\n```\n\n## Functions\n\n<dl>\n<dt><a href=\"#ApiClient\">ApiClient(data)</a></dt>\n<dd><p>ApiClient constructor</p>\n</dd>\n<dt><a href=\"#isEmptyObject\">isEmptyObject(obj)</a> ⇒ <code>Boolean</code></dt>\n<dd><p>Check if is object empty</p>\n</dd>\n</dl>\n\n<a name=\"ApiClient\"></a>\n\n## ApiClient(data)\nApiClient constructor\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| data | <code>Object</code> | Seed data. |\n\n\n* [ApiClient(data)](#ApiClient)\n    * [.download(api, param, options, callback)](#ApiClient+download) ⇒ <code>Void</code>\n    * [.get(api, param, options, callback)](#ApiClient+get) ⇒ <code>Void</code>\n    * [.postUpload(api, param, options, callback)](#ApiClient+postUpload) ⇒ <code>Void</code>\n    * [.postForm(api, param, options, callback)](#ApiClient+postForm) ⇒ <code>Void</code>\n    * [.post(api, param, options, callback)](#ApiClient+post) ⇒ <code>Void</code>\n    * [.putForm(api, param, options, callback)](#ApiClient+putForm) ⇒ <code>Void</code>\n    * [.put(api, param, options, callback)](#ApiClient+put) ⇒ <code>Void</code>\n    * [.delete(api, param, options, callback)](#ApiClient+delete) ⇒ <code>Void</code>\n\n<a name=\"ApiClient+download\"></a>\n\n### apiClient.download(api, param, options, callback) ⇒ <code>Void</code>\nDownload file from server\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"ApiClient+get\"></a>\n\n### apiClient.get(api, param, options, callback) ⇒ <code>Void</code>\nGet thing from server using method HTTP GET\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"ApiClient+postUpload\"></a>\n\n### apiClient.postUpload(api, param, options, callback) ⇒ <code>Void</code>\nUpload file to server using POST method with attached file on body.\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"ApiClient+postForm\"></a>\n\n### apiClient.postForm(api, param, options, callback) ⇒ <code>Void</code>\nUpload file to server using POST method with attached file on body,\nformatted as multipart form.\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"ApiClient+post\"></a>\n\n### apiClient.post(api, param, options, callback) ⇒ <code>Void</code>\nSend string via POST method. This API will keep body on memory, attaching\nbig string more than 1MB is not recommended, as it will fill the memory so fast.\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"ApiClient+putForm\"></a>\n\n### apiClient.putForm(api, param, options, callback) ⇒ <code>Void</code>\nSend data using PUT method with multipart/form-data format body.\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"ApiClient+put\"></a>\n\n### apiClient.put(api, param, options, callback) ⇒ <code>Void</code>\nSend data using PUT method with raw string body.\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"ApiClient+delete\"></a>\n\n### apiClient.delete(api, param, options, callback) ⇒ <code>Void</code>\nSend data using DELETE method with raw string body.\n\n**Kind**: instance method of <code>[ApiClient](#ApiClient)</code>  \n**Returns**: <code>Void</code> - Nothing to return.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| api | <code>String</code> | Endpoint API. |\n| param | <code>Object</code> | Parameter url object. |\n| options | <code>Object</code> | Request option object. |\n| callback | <code>function</code> | Callback function. |\n\n<a name=\"isEmptyObject\"></a>\n\n## isEmptyObject(obj) ⇒ <code>Boolean</code>\nCheck if is object empty\n\n**Kind**: global function  \n**Returns**: <code>Boolean</code> - Return true if empty or false otherwise.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| obj | <code>Object</code> | Object to be Check |\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/septianw/node-apiclient/issues"
  },
  "homepage": "https://github.com/septianw/node-apiclient",
  "_id": "apiclient@0.2.5",
  "_shasum": "c361c9f814b29c7ac49573e793561a310e31d9d4",
  "_from": "apiclient@^0.2.5",
  "_resolved": "https://registry.npmjs.org/apiclient/-/apiclient-0.2.5.tgz"
}
